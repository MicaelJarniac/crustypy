[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "{{cookiecutter.project_distribution_name}}"
version = "0.1.0"
description = "{{cookiecutter.project_short_description}}"
authors = ["{{cookiecutter.full_name}} <{{cookiecutter.email}}>"]
license = "MIT"
readme = "docs/README.md"
packages = [{include = "{{cookiecutter.project_slug}}", from = "src"}]
homepage = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_distribution_name}}"
repository = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_distribution_name}}"
documentation = "https://{{cookiecutter.project_distribution_name}}.readthedocs.io"
classifiers = [
  # Get more from http://pypi.python.org/pypi?%3Aaction=list_classifiers
  "Development Status :: 1 - Planning",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.8"

loguru = "^0.7.0"

[tool.poetry.group.tests.dependencies]
coverage = "^7.2.7"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"

[tool.poetry.group.docs.dependencies]
furo = "^2023.5.20"
myst-parser = "^2.0.0"
Sphinx = "^7.0.1"
sphinxcontrib-spelling = "^8.0.0"

[tool.poetry.group.stubs.dependencies]
# Typing stubs go here

[tool.poetry.group.typing.dependencies]
# Also requires group `stubs`
mypy = "^1.4.0"
nox = "^2023.4.22"
pytest = "^7.4.0"

[tool.poetry.group.linting.dependencies]
ruff = "^0.0.275"

[tool.poetry.group.formatting.dependencies]
black = "^23.3.0"

[tool.poetry.group.pre-commit.dependencies]
pre-commit = "^3.3.3"

[tool.poetry.group.dev.dependencies]
nox = "^2023.4.22"
python-semantic-release = "^7.34.6"

[tool.poetry.urls]
"Changelog" = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_distribution_name}}/blob/main/docs/CHANGELOG.md"
"Bug Tracker" = "https://github.com/{{cookiecutter.github_username}}/{{cookiecutter.project_distribution_name}}/issues"

[tool.ruff]
# https://beta.ruff.rs/docs/rules
line-length = 88  # Default
select = ["ALL"]
ignore = [
  "D203",
  "D213",
  "ANN101",
  "ANN102",
]
unfixable = ["ERA001"]
force-exclude = true
src = ["src"]
target-version = "py38"

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.flake8-builtins]
builtins-ignorelist = ["id", "type"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.black]
line-length = 88  # Default
include = '\.pyi?$'
extend-exclude = '''
/(
    \.git
  | _build
)/
'''

[tool.mypy]
files = ["src", "docs", "tests", "noxfile.py"]
exclude = [".venv"]
enable_error_code = [
  "ignore-without-code"
]
strict = true
warn_unused_ignores = false  # true
show_column_numbers = true
# show_error_context = true
# pretty = true

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
build_command = "pip install poetry && poetry build"

[tool.semantic_release.changelog]
changelog_file = "docs/CHANGELOG.md"

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.branches.rc]
match = "rc"
prerelease = true
prerelease_token = "rc"

[tool.coverage.run]
source = ["src"]
command_line = "-m pytest"

[tool.pytest.ini_options]
# addopts = "--cov"

[tool.cruft]
skip = [
  "src",
  "tests",
  "poetry.lock",
]
